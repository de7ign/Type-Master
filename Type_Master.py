#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Nov 22, 2017 12:29:36 AM


try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import Type_Master_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    Type_Master_support.set_Tk_var()
    top = Type_Master (root)
    Type_Master_support.init(root, top)
    
    root.mainloop()

w = None
def create_Type_Master(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    Type_Master_support.set_Tk_var()
    top = Type_Master (w)
    Type_Master_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Type_Master():
    global w
    w.destroy()
    w = None


class Type_Master:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font9 = "-family {URW Gothic L} -size 30 -weight normal -slant"  \
            " roman -underline 0 -overstrike 0"

        top.geometry("970x570+141+88")
        top.title("Type Master")
        top.configure(background="#4CBBC6")
        top.configure(highlightcolor="black")



        self.HandCanvas = Canvas(top)
        self.HandCanvas.place(relx=0.03, rely=0.49, relheight=0.46
                , relwidth=0.73)
        self.HandCanvas.configure(background="#4CBBC6")
        self.HandCanvas.configure(borderwidth="2")
        self.HandCanvas.configure(highlightbackground="#1C84A7")
        self.HandCanvas.configure(highlightthickness="3")
        self.HandCanvas.configure(selectbackground="#c4c4c4")
        self.HandCanvas.configure(width=710)

        self.TextBox = Text(top)
        self.TextBox.place(relx=0.03, rely=0.06, relheight=0.37, relwidth=0.73)
        self.TextBox.configure(background="white")
        self.TextBox.configure(font=font9)
        self.TextBox.configure(relief=FLAT)
        self.TextBox.configure(selectbackground="#c4c4c4")
        self.TextBox.configure(undo="1")
        self.TextBox.configure(width=710)
        self.TextBox.configure(wrap=WORD)

        self.ToolFrame = Frame(top)
        self.ToolFrame.place(relx=0.79, rely=0.06, relheight=0.89, relwidth=0.18)
        self.ToolFrame.configure(borderwidth="2")
        self.ToolFrame.configure(background="#4CBBC6")
        self.ToolFrame.configure(highlightbackground="#1C84A7")
        self.ToolFrame.configure(highlightthickness="3")
        self.ToolFrame.configure(width=175)

        self.ResetButton = Button(self.ToolFrame)
        self.ResetButton.place(relx=0.17, rely=0.77, height=36, width=117)
        self.ResetButton.configure(activebackground="#F98999")
        self.ResetButton.configure(background="#F98999")
        self.ResetButton.configure(borderwidth="0")
        self.ResetButton.configure(highlightthickness="0")
        self.ResetButton.configure(relief=FLAT)
        self.ResetButton.configure(text='''Reset''')

        self.TimerLabel = Label(self.ToolFrame)
        self.TimerLabel.place(relx=0.17, rely=0.65, height=36, width=117)
        self.TimerLabel.configure(activebackground="#F98999")
        self.TimerLabel.configure(background="#F98999")
        self.TimerLabel.configure(text='''Timer''')

        self.WPMLabel = Label(self.ToolFrame)
        self.WPMLabel.place(relx=0.17, rely=0.54, height=36, width=117)
        self.WPMLabel.configure(activebackground="#F98999")
        self.WPMLabel.configure(background="#F98999")
        self.WPMLabel.configure(disabledforeground="#a363a3")
        self.WPMLabel.configure(text='''WPM''')

        self.AboutButton = Button(self.ToolFrame)
        self.AboutButton.place(relx=0.17, rely=0.88, height=36, width=117)
        self.AboutButton.configure(activebackground="#F98999")
        self.AboutButton.configure(background="#F98999")
        self.AboutButton.configure(borderwidth="0")
        self.AboutButton.configure(highlightthickness="0")
        self.AboutButton.configure(relief=FLAT)
        self.AboutButton.configure(text='''About''')
        self.AboutButton.configure(disabledforeground="#455a64")

        self.MinuteLabelframe = LabelFrame(self.ToolFrame)
        self.MinuteLabelframe.place(relx=0.06, rely=0.15, relheight=0.34
                , relwidth=0.86)
        self.MinuteLabelframe.configure(relief=GROOVE)
        self.MinuteLabelframe.configure(text='''Time''')
        self.MinuteLabelframe.configure(background="#4CBBC6")
        self.MinuteLabelframe.configure(highlightbackground="#1C84A7")
        self.MinuteLabelframe.configure(width=150)

        self.Radio1 = Radiobutton(self.MinuteLabelframe)
        self.Radio1.place(relx=0.13, rely=0.14, relheight=0.21, relwidth=0.78)
        self.Radio1.configure(activebackground="#F98999")
        self.Radio1.configure(background="#F98999")
        self.Radio1.configure(borderwidth="0")
        self.Radio1.configure(highlightthickness="0")
        self.Radio1.configure(disabledforeground="#455a64")
        self.Radio1.configure(offrelief="flat")
        self.Radio1.configure(text='''1 minute''')
        self.Radio1.configure(value="60")
        self.Radio1.configure(variable=Type_Master_support.support_variable.TimeValue)
        self.Radio1.select()

        self.Radio2 = Radiobutton(self.MinuteLabelframe)
        self.Radio2.place(relx=0.13, rely=0.43, relheight=0.21, relwidth=0.78)
        self.Radio2.configure(activebackground="#F98999")
        self.Radio2.configure(background="#F98999")
        self.Radio2.configure(borderwidth="0")
        self.Radio2.configure(highlightthickness="0")
        self.Radio2.configure(disabledforeground="#455a64")
        self.Radio2.configure(offrelief="flat")
        self.Radio2.configure(text='''2 minute''')
        self.Radio2.configure(value="120")
        self.Radio2.configure(variable=Type_Master_support.support_variable.TimeValue)

        self.Radio5 = Radiobutton(self.MinuteLabelframe)
        self.Radio5.place(relx=0.13, rely=0.71, relheight=0.21, relwidth=0.78)
        self.Radio5.configure(activebackground="#F98999")
        self.Radio5.configure(background="#F98999")
        self.Radio5.configure(borderwidth="0")
        self.Radio5.configure(highlightthickness="0")
        self.Radio5.configure(disabledforeground="#455a64")
        self.Radio5.configure(offrelief="flat")
        self.Radio5.configure(text='''5 minute''')
        self.Radio5.configure(value="300")
        self.Radio5.configure(variable=Type_Master_support.support_variable.TimeValue)


        self.WordOption = OptionMenu(self.ToolFrame, Type_Master_support.support_variable.WordOptionVar, \
        *Type_Master_support.support_variable.WordOptionChoices, command=Type_Master_support.update_textBox)
        self.WordOption.place(relx=0.10, rely=0.05, height=36, width=130)
        self.WordOption.configure(activebackground="#F98999")
        self.WordOption.configure(background="#F98999")
        self.WordOption.configure(borderwidth="0")
        self.WordOption.configure(highlightthickness="0")
        self.WordOption.configure(disabledforeground="#455a64")



if __name__ == '__main__':
    vp_start_gui()
